version: "3.9"

configs:
  nginx_conf:
    file: ./nginx.conf

networks:
  mynetwork:
    driver: bridge

volumes:
  db_data:
  redis_data:
  mongo_data:
  wordpress_data:

services:
  web:
    image: nginx:latest
    container_name: nginx_web
    ports:
      - "80:80"
    configs:
      - source: nginx_conf
        target: /etc/nginx/nginx.conf
    depends_on:
      - db
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      retries: 3

  db:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: exampledb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      retries: 3

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin_ui
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - mynetwork

  redis:
    image: redis:latest
    container_name: redis_cache
    volumes:
      - redis_data:/data
    networks:
      - mynetwork

  mongodb:
    image: mongo:latest
    container_name: mongo_db
    volumes:
      - mongo_data:/data/db
    networks:
      - mynetwork

  mongo-express:
    image: mongo-express:latest
    container_name: mongo_express_ui
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    networks:
      - mynetwork

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq_server
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - mynetwork

  nodejs:
    image: node:latest
    container_name: nodejs_app
    working_dir: /usr/src/app
    volumes:
      - .:/usr/src/app
    command: "node index.js"
    networks:
      - mynetwork
  wordpress:
      image: wordpress:latest
      container_name: wordpress_site
      environment:
        WORDPRESS_DB_HOST: db
        WORDPRESS_DB_USER: user
        WORDPRESS_DB_PASSWORD: password
        WORDPRESS_DB_NAME: exampledb
      volumes:
        - wordpress_data:/var/www/html
      ports:
        - "8000:80"
      depends_on:
        - db
      networks:
        - mynetwork

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    container_name: elasticsearch_server
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - mynetwork

